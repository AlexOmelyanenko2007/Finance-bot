import asyncio
import logging

from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    me = await bot.get_me()
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–ü–æ–º–æ—â—å üôã‚Äç",
        callback_data="help")
    )

    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!üëã\n"
                         f"–Ø - {me.first_name} –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤—ã–≥–æ–¥–Ω–æ—Å—Ç–∏ –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–π"
                         f" –∏–ª–∏ –∏–Ω–æ–π –∞–∫—Ü–∏–∏, —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏!", reply_markup=builder.as_markup())


@dp.callback_query(lambda c: c.data == "help")
async def send_random_value(callback: types.CallbackQuery):
    await callback.message.answer('–¢–æ—Ä–≥–æ–≤—ã–π –±–æ—Ç - —ç—Ç–æ –±–æ—Ç, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π'
                                  ' —Ä–∞–±–æ—Ç–∞—Ç—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ä—ã–Ω–∫–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ —É–∫–∞–∂–∏—Ç–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.'
                                  ' –ë–ª–∞–≥–æ–¥–∞—Ä—è —á–µ–º—É –±–æ—Ç –ø—Ä–∏–º–µ—Ç —Ä–µ—à–µ–Ω–∏–µ –ø–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É –∏ –≤—ã–¥–∞—Å—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤—ã–≥–æ–¥–Ω–æ–µ'
                                  ' –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ ü§ñ.')


async def start_bot():
    await dp.start_polling(bot)



if __name__ == "__main__":
    asyncio.run(start_bot())
